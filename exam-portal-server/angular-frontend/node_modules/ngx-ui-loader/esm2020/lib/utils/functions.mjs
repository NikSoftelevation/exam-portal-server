export function getExcludeObj(config) {
    let strs;
    let regExps;
    if (config) {
        if (config.exclude) {
            strs = config.exclude.map((url) => url.toLowerCase());
        }
        if (config.excludeRegexp) {
            regExps = config.excludeRegexp.map((regexp) => new RegExp(regexp, 'i'));
        }
    }
    return { strs, regExps };
}
export function isIgnored(url, excludeStrings, excludeRegexps) {
    if (excludeStrings) {
        // do not show the loader for urls in the `exclude` list
        if (excludeStrings.findIndex((str) => url.toLowerCase().startsWith(str)) !==
            -1) {
            return true;
        }
    }
    if (excludeRegexps) {
        // do not show the loader for urls which matches regexps in the `excludeRegexp` list
        if (excludeRegexps.findIndex((regexp) => regexp.test(url)) !== -1) {
            return true;
        }
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXVpLWxvYWRlci9zcmMvbGliL3V0aWxzL2Z1bmN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsYUFBYSxDQUFDLE1BQWM7SUFDMUMsSUFBSSxJQUFjLENBQUM7SUFDbkIsSUFBSSxPQUFpQixDQUFDO0lBRXRCLElBQUksTUFBTSxFQUFFO1FBQ1YsSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFO1lBQ2xCLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7U0FDdkQ7UUFFRCxJQUFJLE1BQU0sQ0FBQyxhQUFhLEVBQUU7WUFDeEIsT0FBTyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUN6RTtLQUNGO0lBRUQsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUMzQixDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FDdkIsR0FBVyxFQUNYLGNBQXdCLEVBQ3hCLGNBQXdCO0lBRXhCLElBQUksY0FBYyxFQUFFO1FBQ2xCLHdEQUF3RDtRQUN4RCxJQUNFLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDcEUsQ0FBQyxDQUFDLEVBQ0Y7WUFDQSxPQUFPLElBQUksQ0FBQztTQUNiO0tBQ0Y7SUFFRCxJQUFJLGNBQWMsRUFBRTtRQUNsQixvRkFBb0Y7UUFDcEYsSUFBSSxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDakUsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnLCBFeGNsdWRlIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV4Y2x1ZGVPYmooY29uZmlnOiBDb25maWcpOiBFeGNsdWRlIHtcbiAgbGV0IHN0cnM6IHN0cmluZ1tdO1xuICBsZXQgcmVnRXhwczogUmVnRXhwW107XG5cbiAgaWYgKGNvbmZpZykge1xuICAgIGlmIChjb25maWcuZXhjbHVkZSkge1xuICAgICAgc3RycyA9IGNvbmZpZy5leGNsdWRlLm1hcCgodXJsKSA9PiB1cmwudG9Mb3dlckNhc2UoKSk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5leGNsdWRlUmVnZXhwKSB7XG4gICAgICByZWdFeHBzID0gY29uZmlnLmV4Y2x1ZGVSZWdleHAubWFwKChyZWdleHApID0+IG5ldyBSZWdFeHAocmVnZXhwLCAnaScpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBzdHJzLCByZWdFeHBzIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0lnbm9yZWQoXG4gIHVybDogc3RyaW5nLFxuICBleGNsdWRlU3RyaW5nczogc3RyaW5nW10sXG4gIGV4Y2x1ZGVSZWdleHBzOiBSZWdFeHBbXVxuKTogYm9vbGVhbiB7XG4gIGlmIChleGNsdWRlU3RyaW5ncykge1xuICAgIC8vIGRvIG5vdCBzaG93IHRoZSBsb2FkZXIgZm9yIHVybHMgaW4gdGhlIGBleGNsdWRlYCBsaXN0XG4gICAgaWYgKFxuICAgICAgZXhjbHVkZVN0cmluZ3MuZmluZEluZGV4KChzdHIpID0+IHVybC50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoc3RyKSkgIT09XG4gICAgICAtMVxuICAgICkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGV4Y2x1ZGVSZWdleHBzKSB7XG4gICAgLy8gZG8gbm90IHNob3cgdGhlIGxvYWRlciBmb3IgdXJscyB3aGljaCBtYXRjaGVzIHJlZ2V4cHMgaW4gdGhlIGBleGNsdWRlUmVnZXhwYCBsaXN0XG4gICAgaWYgKGV4Y2x1ZGVSZWdleHBzLmZpbmRJbmRleCgocmVnZXhwKSA9PiByZWdleHAudGVzdCh1cmwpKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==